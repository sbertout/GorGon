require Math;
require Fbx;
require Geometry;

require GGscene;
require GGimport;

object TestSGFbx : CCTestCase
{
};

//const Boolean WIN = true;

String fixPath(String s)
{
  //if (WIN) return "C:/Users/stephane/Documents/git/concord/tests/" + s;
  return "KLTests/" + s;
}

TestSGFbx.testFBXSimpleMesh!()
{
  String fbxFilepath = fixPath("_assets/house.fbx");
  String fbxTexFolder = fixPath("testAssets");

  Entity root = CCimportAsset(fbxFilepath, fbxTexFolder);

  this.AssertEquals(root.getName(), 'house.fbx');
  this.Assert(root.hasUpdateComponent('CCTextureSet'));
  this.Assert(root.hasUpdateComponent('MaterialSet'));

  CCTextureSet texSet = root.getUpdateComponent('CCTextureSet');
  this.AssertEquals(texSet.getTextureCount(), 1);
  this.AssertEquals(texSet.getPath('FarmWorld_01.tga'), 'C:/Trains/repository/Unity/Assets/Textures/Levels/FarmWorld_01.tga');
  this.AssertEquals(texSet.getTextureKeys()[0], 'FarmWorld_01.tga');
  this.AssertEquals(texSet.getTexturePaths()[0], 'C:/Trains/repository/Unity/Assets/Textures/Levels/FarmWorld_01.tga');

  MaterialSet matSet = root.getUpdateComponent('MaterialSet');
  this.AssertEquals(matSet.getMaterialCount(), 1);

  this.AssertEquals(root.getChildCount(), 1);
  Entity rootChild = root.getChild(0);
  this.AssertEquals(rootChild.getName(), 'polySurface231');
  this.AssertEquals(rootChild.getChildCount(), 1);
  this.AssertEquals(rootChild.getChild(0).getName(), 'House_3_01');
  this.AssertEquals(rootChild.getChild(0).getChildCount(), 0);
}

TestSGFbx.testFBXSimpleMesh2!()
{
  String fbxFilepath = fixPath("_assets/barn.fbx");
  String fbxTexFolder = fixPath("testAssets");

  Entity root = CCimportAsset(fbxFilepath, fbxTexFolder);

  this.AssertEquals(root.getName(), 'barn.fbx');
  this.Assert(root.hasUpdateComponent('CCTextureSet'));
  this.Assert(root.hasUpdateComponent('MaterialSet'));

  CCTextureSet texSet = root.getUpdateComponent('CCTextureSet');
  this.AssertEquals(texSet.getTextureCount(), 2);
  MaterialSet matSet = root.getUpdateComponent('MaterialSet');
  this.AssertEquals(matSet.getMaterialCount(), 2);

  this.AssertEquals(root.getChildCount(), 1);
  Entity rootChild = root.getChild(0);
  this.AssertEquals(rootChild.getName(), 'Barn_01');
  this.AssertEquals(rootChild.getChildCount(), 2);
  this.AssertEquals(rootChild.getChild(0).getName(), 'BarnMill01a');
  this.AssertEquals(rootChild.getChild(1).getName(), 'BarnMill01b');
  this.AssertEquals(rootChild.getChild(0).getChildCount(), 0);
  this.AssertEquals(rootChild.getChild(1).getChildCount(), 0);
}

TestSGFbx.testFBXSimpleMesh3!()
{
  String fbxFilepath = fixPath("_assets/station.fbx");
  String fbxTexFolder = fixPath("testAssets");

  Entity root = CCimportAsset(fbxFilepath, fbxTexFolder);

  this.AssertEquals(root.getName(), 'station.fbx');
  this.Assert(root.hasUpdateComponent('CCTextureSet'));
  this.Assert(root.hasUpdateComponent('MaterialSet'));

  CCTextureSet texSet = root.getUpdateComponent('CCTextureSet');
  this.AssertEquals(texSet.getTextureCount(), 3);
  MaterialSet matSet = root.getUpdateComponent('MaterialSet');
  this.AssertEquals(matSet.getMaterialCount(), 3);

  String expandedPaths[] = root.expandAllPaths();
  this.AssertEquals(expandedPaths[0], '/station.fbx');
  this.AssertEquals(expandedPaths[1], '/station.fbx/GndStn_Ground1a');
  this.AssertEquals(expandedPaths[2], '/station.fbx/GndStn_Ground1a/GndStn_Building1a');
  this.AssertEquals(expandedPaths[3], '/station.fbx/GndStn_Ground1a/GndStn_Building1a/GndStn_Glass1a');
  this.AssertEquals(expandedPaths[4], '/station.fbx/GndStn_Ground1a/GndStn_Shadow1a');
}
